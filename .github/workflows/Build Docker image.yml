name: Build ghcr.io/saeon/postgis

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BRANCH_REF: main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.tag }}
            type=raw,latest

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: src/${{ env.BRANCH_REF }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [build]
    runs-on: github-runner.saeon.int
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_REF }}
        
      - name: (SCP) Copy Docker files to app server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          source: src/${{ github.event.inputs.tag }}/docker-compose.yml
          target: postgis

      - name: (SSH) Deploy Docker stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          script: |
            echo "POSTGIS_IMAGE=${{ needs.build.outputs.image }}" > /home/runner/postgis/src/${{ github.event.inputs.tag }}/docker-compose.env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> /home/runner/postgis/src/${{ github.event.inputs.tag }}/docker-compose.env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> /home/runner/postgis/src/${{ github.event.inputs.tag }}/docker-compose.env
            sudo /opt/deploy-docker-stack.sh /home/runner/postgis/src/${{ github.event.inputs.tag }}/docker-compose.yml /home/runner/postgis/src/${{ github.event.inputs.tag }}/docker-compose.env postgis_${{ github.event.inputs.tag }}
